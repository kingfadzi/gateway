version: 1
updated_at: 2025-08-18

fields:
  # ---- Security (A1/A2/B/C/D)
  - key: confidentiality_level
    label: Confidentiality Level
    derived_from: security_rating
    rule:
      A1: { value: restricted,   ttl: 0d,   refresh: per_release }
      A2: { value: restricted,   ttl: 0d,   refresh: per_release }
      B:  { value: confidential, ttl: 90d,  refresh: on_expiry }
      C:  { value: internal,     ttl: 180d, refresh: on_expiry }
      D:  { value: public,       ttl: 365d, refresh: on_expiry }

  - key: encryption_at_rest
    label: Encryption at Rest
    derived_from: security_rating
    rule:
      A1: { value: required, ttl: 0d,   refresh: per_release }
      A2: { value: required, ttl: 0d,   refresh: per_release }
      B:  { value: required, ttl: 180d, refresh: on_expiry }
      C:  { value: required, ttl: 365d, refresh: on_expiry }
      D:  { value: optional, ttl: 365d, refresh: on_expiry }

  - key: encryption_in_transit
    label: Encryption in Transit
    derived_from: security_rating
    rule:
      A1: { value: required,    ttl: 0d,   refresh: per_release }
      A2: { value: required,    ttl: 0d,   refresh: per_release }
      B:  { value: required,    ttl: 180d, refresh: on_expiry }
      C:  { value: recommended, ttl: 365d, refresh: on_expiry }
      D:  { value: recommended, ttl: 365d, refresh: on_expiry }

  - key: security_testing
    label: Security Testing
    derived_from: security_rating
    rule:
      A1: { value: external_pentest_annual+continuous_scans, ttl: 0d,   refresh: per_release }
      A2: { value: internal_pentest_annual+continuous_scans, ttl: 0d,   refresh: per_release }
      B:  { value: sast+dast_on_release+quarterly_scan,      ttl: 90d,  refresh: per_release }
      C:  { value: sast_on_release,                           ttl: 0d,   refresh: per_release }
      D:  { value: sast_optional,                             ttl: 0d,   refresh: none }

  - key: secrets_management
    label: Secrets Management
    derived_from: security_rating
    rule:
      A1: { value: centralized_required,     ttl: 0d,   refresh: per_release }
      A2: { value: centralized_required,     ttl: 0d,   refresh: per_release }
      B:  { value: centralized_recommended,  ttl: 180d, refresh: on_expiry }
      C:  { value: centralized_recommended,  ttl: 365d, refresh: on_expiry }
      D:  { value: minimal_ok,               ttl: 365d, refresh: on_expiry }

  - key: key_rotation_max
    label: Key Rotation Max
    derived_from: security_rating
    rule:
      A1: { value: 90d,  ttl: 0d,   refresh: per_release }
      A2: { value: 180d, ttl: 0d,   refresh: per_release }
      B:  { value: 365d, ttl: 180d, refresh: on_expiry }
      C:  { value: 365d, ttl: 365d, refresh: on_expiry }
      D: {  value: n/a,  ttl: 0d,   refresh: none }

  # ---- Integrity (A-D)
  - key: data_validation
    label: Data Validation
    derived_from: integrity_rating
    rule:
      A: { value: dual_control,        ttl: 0d,   refresh: per_release }
      B: { value: strong_validation,   ttl: 90d,  refresh: on_expiry }
      C: { value: standard_validation, ttl: 180d, refresh: on_expiry }
      D: { value: minimal_validation,  ttl: 365d, refresh: on_expiry }

  - key: reconciliation_frequency
    label: Reconciliation Frequency
    derived_from: integrity_rating
    rule:
      A: { value: daily,       ttl: 0d,   refresh: per_release }
      B: { value: weekly,      ttl: 30d,  refresh: on_expiry }
      C: { value: per_release, ttl: 0d,   refresh: per_release }
      D: { value: ad_hoc,      ttl: 180d, refresh: on_expiry }

  - key: audit_logging
    label: Audit Logging
    derived_from: integrity_rating
    rule:
      A: { value: full_with_daily_review,        ttl: 0d,   refresh: per_release }
      B: { value: full_with_periodic_review,     ttl: 90d,  refresh: on_expiry }
      C: { value: logging_enabled+sampled_review, ttl: 180d, refresh: on_expiry }
      D: { value: basic_logging,                 ttl: 365d, refresh: on_expiry }

  - key: change_control
    label: Change Control
    derived_from: integrity_rating
    rule:
      A: { value: independent_review+regression_suite, ttl: 0d,  refresh: per_release }
      B: { value: peer_review+regression_suite,        ttl: 0d,  refresh: per_release }
      C: { value: peer_review+unit_tests,              ttl: 0d,  refresh: per_release }
      D: { value: optional_peer_review,                ttl: 180d, refresh: on_expiry }

  - key: immutability_required
    label: Immutability Required
    derived_from: integrity_rating
    rule:
      A: { value: yes, ttl: 0d,   refresh: per_release }
      B: { value: yes, ttl: 0d,   refresh: per_release }
      C: { value: no,  ttl: 180d, refresh: on_expiry }
      D: { value: no,  ttl: 365d, refresh: on_expiry }

  # ---- Availability (A-D)
  - key: rto_hours
    label: RTO (hours)
    derived_from: availability_rating
    rule:
      A: { value: 1,          ttl: 0d,   refresh: per_release }
      B: { value: 4,          ttl: 90d,  refresh: on_expiry }
      C: { value: 24,         ttl: 180d, refresh: on_expiry }
      D: { value: best_effort, ttl: 365d, refresh: on_expiry }

  - key: rpo_minutes
    label: RPO (minutes)
    derived_from: availability_rating
    rule:
      A: { value: 5,           ttl: 0d,   refresh: per_release }
      B: { value: 60,          ttl: 90d,  refresh: on_expiry }
      C: { value: 240,         ttl: 180d, refresh: on_expiry }
      D: { value: best_effort, ttl: 365d, refresh: on_expiry }

  - key: ha_topology
    label: HA Topology
    derived_from: availability_rating
    rule:
      A: { value: active_active,  ttl: 0d,   refresh: per_release }
      B: { value: active_passive, ttl: 0d,   refresh: per_release }
      C: { value: backup_restore, ttl: 180d, refresh: on_expiry }
      D: { value: none,           ttl: 365d, refresh: on_expiry }

  - key: monitoring_slos
    label: Monitoring SLOs
    derived_from: availability_rating
    rule:
      A: { value: "99.9+_with_alerting", ttl: 0d,   refresh: per_release }
      B: { value: "99.5_with_alerting",  ttl: 0d,   refresh: per_release }
      C: { value: "99.0",                ttl: 180d, refresh: on_expiry }
      D: { value: none,                  ttl: 365d, refresh: on_expiry }

  - key: oncall_coverage
    label: On-call Coverage
    derived_from: availability_rating
    rule:
      A: { value: "24x7",           ttl: 0d,   refresh: per_release }
      B: { value: "16x5",           ttl: 0d,   refresh: per_release }
      C: { value: "business_hours", ttl: 90d,  refresh: on_expiry }
      D: { value: none,             ttl: 365d, refresh: on_expiry }

  # ---- Resilience (0–4, 0 strongest)
  - key: dr_test_frequency
    label: DR Test Frequency
    derived_from: resilience_rating
    rule:
      "0": { value: semi_annual_live,   ttl: 0d,   refresh: per_release }
      "1": { value: annual_live,        ttl: 0d,   refresh: per_release }
      "2": { value: annual_tabletop,    ttl: 180d, refresh: on_expiry }
      "3": { value: ad_hoc_tabletop,    ttl: 365d, refresh: on_expiry }
      "4": { value: none,               ttl: 0d,   refresh: none }

  - key: backup_policy
    label: Backup Policy
    derived_from: resilience_rating
    rule:
      "0": { value: encrypted_geo_redundant+tested_restores, ttl: 90d,  refresh: on_expiry }
      "1": { value: encrypted+tested_restores,               ttl: 90d,  refresh: on_expiry }
      "2": { value: standard_backups+periodic_restore_test,  ttl: 180d, refresh: on_expiry }
      "3": { value: standard_backups,                        ttl: 365d, refresh: on_expiry }
      "4": { value: optional,                                ttl: 0d,   refresh: none }

  - key: failover_automation
    label: Failover Automation
    derived_from: resilience_rating
    rule:
      "0": { value: automatic,      ttl: 0d,   refresh: per_release }
      "1": { value: semi_automatic, ttl: 0d,   refresh: per_release }
      "2": { value: manual,         ttl: 180d, refresh: on_expiry }
      "3": { value: manual,         ttl: 365d, refresh: on_expiry }
      "4": { value: best_effort,    ttl: 0d,   refresh: none }

  - key: runbook_maturity
    label: Runbook Maturity
    derived_from: resilience_rating
    rule:
      "0": { value: certified, ttl: 90d,  refresh: on_expiry }
      "1": { value: approved,  ttl: 90d,  refresh: on_expiry }
      "2": { value: draft,     ttl: 30d,  refresh: on_expiry }
      "3": { value: draft,     ttl: 30d,  refresh: on_expiry }
      "4": { value: none,      ttl: 0d,   refresh: none }

  - key: chaos_testing
    label: Chaos Testing
    derived_from: resilience_rating
    rule:
      "0": { value: required,    ttl: 0d,   refresh: per_release }
      "1": { value: recommended, ttl: 180d, refresh: on_expiry }
      "2": { value: optional,    ttl: 365d, refresh: on_expiry }
      "3": { value: none,        ttl: 0d,   refresh: none }
      "4": { value: none,        ttl: 0d,   refresh: none }

  # ---- App Criticality (A-D) — summary only
  - key: materiality
    label: Materiality
    derived_from: app_criticality
    rule:
      A: { value: crown_jewel, ttl: 365d, refresh: on_expiry }
      B: { value: high,        ttl: 365d, refresh: on_expiry }
      C: { value: medium,      ttl: 365d, refresh: on_expiry }
      D: { value: low,         ttl: 365d, refresh: on_expiry }

  - key: review_depth
    label: Review Depth
    derived_from: app_criticality
    rule:
      A: { value: full_review,    ttl: 365d, refresh: on_expiry }
      B: { value: scoped_review,  ttl: 365d, refresh: on_expiry }
      C: { value: express_review, ttl: 365d, refresh: on_expiry }
      D: { value: self_attested,  ttl: 365d, refresh: on_expiry }

  # ---- Artifacts (per release)
  - key: product_vision
    label: Product Vision
    derived_from: artifact
    rule:
      required: { value: required, ttl: 0d, refresh: per_release }

  - key: product_roadmap
    label: Product Roadmap
    derived_from: artifact
    rule:
      required: { value: required, ttl: 0d,  refresh: per_release }

  - key: architecture_vision
    label: Architecture Vision
    derived_from: artifact
    rule:
      required: { value: required, ttl: 0d, refresh: per_release }

  - key: service_vision
    label: Service Vision
    derived_from: artifact
    rule:
      required: { value: required, ttl: 0d, refresh: per_release }

  - key: security_vision
    label: Security Vision
    derived_from: artifact
    rule:
      required: { value: required, ttl: 0d,  refresh: per_release }

  - key: test_vision
    label: Test Vision
    derived_from: artifact
    rule:
      required: { value: required, ttl: 0d,   refresh: per_release }
