version: 1
updated_at: 2025-08-18

fields:
  # ---- Confidentiality (A1/A2/B/C/D)
  - key: confidentiality_level
    label: Confidentiality Level
    derived_from: confidentiality_rating
    rule:
      A: { value: restricted,   label: "Restricted",   ttl: 0d,   refresh: per_release }
      B:  { value: confidential, label: "Confidential", ttl: 90d,  refresh: on_expiry }
      C:  { value: internal,     label: "Internal",     ttl: 180d, refresh: on_expiry }
      D:  { value: public,       label: "Public",       ttl: 365d, refresh: on_expiry }

  - key: data_residency_control
    label: Data Residency Control
    derived_from: confidentiality_rating
    rule:
      A: { value: required_in_region,   label: "Required in-region",   ttl: 0d,   refresh: per_release }
      B:  { value: preferred_in_region,  label: "Preferred in-region",  ttl: 90d,  refresh: on_expiry }
      C:  { value: permitted_cross_region, label: "Permitted cross-region", ttl: 180d, refresh: on_expiry }
      D:  { value: unrestricted,         label: "Unrestricted",         ttl: 365d, refresh: on_expiry }

  - key: de_identification
    label: De-Identification
    derived_from: confidentiality_rating
    rule:
      A: { value: mandatory_strong,   label: "Mandatory (strong)",   ttl: 0d,   refresh: per_release }
      B:  { value: required,           label: "Required",             ttl: 90d,  refresh: on_expiry }
      C:  { value: recommended,        label: "Recommended",          ttl: 180d, refresh: on_expiry }
      D:  { value: optional,           label: "Optional",             ttl: 365d, refresh: on_expiry }

  # ---- Security (A1/A2/B/C/D)
  - key: encryption_at_rest
    label: Encryption at Rest
    derived_from: security_rating
    rule:
      A1: { value: required, label: "Required", ttl: 0d,   refresh: per_release }
      A2: { value: required, label: "Required", ttl: 0d,   refresh: per_release }
      B:  { value: required, label: "Required", ttl: 180d, refresh: on_expiry }
      C:  { value: required, label: "Required", ttl: 365d, refresh: on_expiry }
      D:  { value: optional, label: "Optional", ttl: 365d, refresh: on_expiry }

  - key: encryption_in_transit
    label: Encryption in Transit
    derived_from: security_rating
    rule:
      A1: { value: required,    label: "Required",    ttl: 0d,   refresh: per_release }
      A2: { value: required,    label: "Required",    ttl: 0d,   refresh: per_release }
      B:  { value: required,    label: "Required",    ttl: 180d, refresh: on_expiry }
      C:  { value: recommended, label: "Recommended", ttl: 365d, refresh: on_expiry }
      D:  { value: recommended, label: "Recommended", ttl: 365d, refresh: on_expiry }

  - key: security_testing
    label: Security Testing
    derived_from: security_rating
    rule:
      A1: { value: external_pentest_annual+continuous_scans, label: "External pentest (annual) + continuous scans", ttl: 0d,   refresh: per_release }
      A2: { value: internal_pentest_annual+continuous_scans, label: "Internal pentest (annual) + continuous scans", ttl: 0d,   refresh: per_release }
      B:  { value: sast+dast_on_release+quarterly_scan,      label: "SAST + DAST on release + quarterly scan",      ttl: 90d,  refresh: per_release }
      C:  { value: sast_on_release,                           label: "SAST on release",                               ttl: 0d,   refresh: per_release }
      D:  { value: sast_optional,                             label: "SAST optional",                                 ttl: 0d,   refresh: none }

  - key: secrets_management
    label: Secrets Management
    derived_from: security_rating
    rule:
      A1: { value: centralized_required,     label: "Centralized required",    ttl: 0d,   refresh: per_release }
      A2: { value: centralized_required,     label: "Centralized required",    ttl: 0d,   refresh: per_release }
      B:  { value: centralized_recommended,  label: "Centralized recommended", ttl: 180d, refresh: on_expiry }
      C:  { value: centralized_recommended,  label: "Centralized recommended", ttl: 365d, refresh: on_expiry }
      D:  { value: minimal_ok,               label: "Minimal OK",              ttl: 365d, refresh: on_expiry }

  - key: key_rotation_max
    label: Key Rotation Max
    derived_from: security_rating
    rule:
      A1: { value: 90d,  label: "Rotate keys ≤ 90 days",  ttl: 0d,   refresh: per_release }
      A2: { value: 180d, label: "Rotate keys ≤ 180 days", ttl: 0d,   refresh: per_release }
      B:  { value: 365d, label: "Rotate keys ≤ 365 days", ttl: 180d, refresh: on_expiry }
      C:  { value: 365d, label: "Rotate keys ≤ 365 days", ttl: 365d, refresh: on_expiry }
      D:  { value: n/a,  label: "Not applicable",         ttl: 0d,   refresh: none }

  # ---- Integrity (A-D)
  - key: data_validation
    label: Data Validation
    derived_from: integrity_rating
    rule:
      A: { value: dual_control,        label: "Dual control",         ttl: 0d,   refresh: per_release }
      B: { value: strong_validation,   label: "Strong validation",    ttl: 90d,  refresh: on_expiry }
      C: { value: standard_validation, label: "Standard validation",  ttl: 180d, refresh: on_expiry }
      D: { value: minimal_validation,  label: "Minimal validation",   ttl: 365d, refresh: on_expiry }

  - key: reconciliation_frequency
    label: Reconciliation Frequency
    derived_from: integrity_rating
    rule:
      A: { value: daily,       label: "Daily",        ttl: 0d,   refresh: per_release }
      B: { value: weekly,      label: "Weekly",       ttl: 30d,  refresh: on_expiry }
      C: { value: per_release, label: "Per release",  ttl: 0d,   refresh: per_release }
      D: { value: ad_hoc,      label: "Ad hoc",       ttl: 180d, refresh: on_expiry }

  - key: audit_logging
    label: Audit Logging
    derived_from: integrity_rating
    rule:
      A: { value: full_with_daily_review,         label: "Full logging + daily review",          ttl: 0d,   refresh: per_release }
      B: { value: full_with_periodic_review,      label: "Full logging + periodic review",       ttl: 90d,  refresh: on_expiry }
      C: { value: logging_enabled+sampled_review, label: "Logging enabled + sampled review",     ttl: 180d, refresh: on_expiry }
      D: { value: basic_logging,                  label: "Basic logging",                        ttl: 365d, refresh: on_expiry }

  - key: change_control
    label: Change Control
    derived_from: integrity_rating
    rule:
      A: { value: independent_review+regression_suite, label: "Independent review + regression suite", ttl: 0d,  refresh: per_release }
      B: { value: peer_review+regression_suite,        label: "Peer review + regression suite",        ttl: 0d,  refresh: per_release }
      C: { value: peer_review+unit_tests,              label: "Peer review + unit tests",               ttl: 0d,  refresh: per_release }
      D: { value: optional_peer_review,                label: "Optional peer review",                   ttl: 180d, refresh: on_expiry }

  - key: immutability_required
    label: Immutability Required
    derived_from: integrity_rating
    rule:
      A: { value: yes, label: "Yes", ttl: 0d,   refresh: per_release }
      B: { value: yes, label: "Yes", ttl: 0d,   refresh: per_release }
      C: { value: no,  label: "No",  ttl: 180d, refresh: on_expiry }
      D: { value: no,  label: "No",  ttl: 365d, refresh: on_expiry }

  # ---- Availability (A-D)
  - key: rto_hours
    label: RTO (hours)
    derived_from: availability_rating
    rule:
      A: { value: 1,          label: "1 hour",       ttl: 0d,   refresh: per_release }
      B: { value: 4,          label: "4 hours",      ttl: 90d,  refresh: on_expiry }
      C: { value: 24,         label: "24 hours",     ttl: 180d, refresh: on_expiry }
      D: { value: best_effort, label: "Best effort", ttl: 365d, refresh: on_expiry }

  - key: rpo_minutes
    label: RPO (minutes)
    derived_from: availability_rating
    rule:
      A: { value: 5,           label: "5 minutes",    ttl: 0d,   refresh: per_release }
      B: { value: 60,          label: "60 minutes",   ttl: 90d,  refresh: on_expiry }
      C: { value: 240,         label: "240 minutes",  ttl: 180d, refresh: on_expiry }
      D: { value: best_effort, label: "Best effort",  ttl: 365d, refresh: on_expiry }

  - key: ha_topology
    label: HA Topology
    derived_from: availability_rating
    rule:
      A: { value: active_active,  label: "Active-active",  ttl: 0d,   refresh: per_release }
      B: { value: active_passive, label: "Active-passive", ttl: 0d,   refresh: per_release }
      C: { value: backup_restore, label: "Backup/restore", ttl: 180d, refresh: on_expiry }
      D: { value: none,           label: "None",           ttl: 365d, refresh: on_expiry }

  - key: monitoring_slos
    label: Monitoring SLOs
    derived_from: availability_rating
    rule:
      A: { value: "99.9+_with_alerting", label: "99.9%+ with alerting", ttl: 0d,   refresh: per_release }
      B: { value: "99.5_with_alerting",  label: "99.5% with alerting",  ttl: 0d,   refresh: per_release }
      C: { value: "99.0",                label: "99.0%",                ttl: 180d, refresh: on_expiry }
      D: { value: none,                  label: "None",                 ttl: 365d, refresh: on_expiry }

  - key: oncall_coverage
    label: On-call Coverage
    derived_from: availability_rating
    rule:
      A: { value: "24x7",           label: "24×7",            ttl: 0d,   refresh: per_release }
      B: { value: "16x5",           label: "16×5",            ttl: 0d,   refresh: per_release }
      C: { value: "business_hours", label: "Business hours",  ttl: 90d,  refresh: on_expiry }
      D: { value: none,             label: "None",            ttl: 365d, refresh: on_expiry }

  # ---- Resilience (0–4, 0 strongest)
  - key: dr_test_frequency
    label: DR Test Frequency
    derived_from: resilience_rating
    rule:
      "0": { value: semi_annual_live,   label: "Semi‑annual live",  ttl: 0d,   refresh: per_release }
      "1": { value: annual_live,        label: "Annual live",       ttl: 0d,   refresh: per_release }
      "2": { value: annual_tabletop,    label: "Annual tabletop",   ttl: 180d, refresh: on_expiry }
      "3": { value: ad_hoc_tabletop,    label: "Ad hoc tabletop",   ttl: 365d, refresh: on_expiry }
      "4": { value: none,               label: "None",              ttl: 0d,   refresh: none }

  - key: backup_policy
    label: Backup Policy
    derived_from: resilience_rating
    rule:
      "0": { value: encrypted_geo_redundant+tested_restores, label: "Encrypted geo‑redundant + tested restores", ttl: 90d,  refresh: on_expiry }
      "1": { value: encrypted+tested_restores,               label: "Encrypted + tested restores",               ttl: 90d,  refresh: on_expiry }
      "2": { value: standard_backups+periodic_restore_test,  label: "Standard backups + periodic restore test",  ttl: 180d, refresh: on_expiry }
      "3": { value: standard_backups,                        label: "Standard backups",                           ttl: 365d, refresh: on_expiry }
      "4": { value: optional,                                label: "Optional",                                   ttl: 0d,   refresh: none }

  - key: failover_automation
    label: Failover Automation
    derived_from: resilience_rating
    rule:
      "0": { value: automatic,      label: "Automatic",       ttl: 0d,   refresh: per_release }
      "1": { value: semi_automatic, label: "Semi‑automatic",  ttl: 0d,   refresh: per_release }
      "2": { value: manual,         label: "Manual",          ttl: 180d, refresh: on_expiry }
      "3": { value: manual,         label: "Manual",          ttl: 365d, refresh: on_expiry }
      "4": { value: best_effort,    label: "Best effort",     ttl: 0d,   refresh: none }

  - key: runbook_maturity
    label: Runbook Maturity
    derived_from: resilience_rating
    rule:
      "0": { value: certified, label: "Certified", ttl: 90d,  refresh: on_expiry }
      "1": { value: approved,  label: "Approved",  ttl: 90d,  refresh: on_expiry }
      "2": { value: draft,     label: "Draft",     ttl: 30d,  refresh: on_expiry }
      "3": { value: draft,     label: "Draft",     ttl: 30d,  refresh: on_expiry }
      "4": { value: none,      label: "None",      ttl: 0d,   refresh: none }

  - key: chaos_testing
    label: Chaos Testing
    derived_from: resilience_rating
    rule:
      "0": { value: required,    label: "Required",    ttl: 0d,   refresh: per_release }
      "1": { value: recommended, label: "Recommended", ttl: 180d, refresh: on_expiry }
      "2": { value: optional,    label: "Optional",    ttl: 365d, refresh: on_expiry }
      "3": { value: none,        label: "None",        ttl: 0d,   refresh: none }
      "4": { value: none,        label: "None",        ttl: 0d,   refresh: none }

  # ---- App Criticality (A-D) — summary only
  - key: materiality
    label: Materiality
    derived_from: app_criticality
    rule:
      A: { value: crown_jewel, label: "Crown jewel", ttl: 365d, refresh: on_expiry }
      B: { value: high,        label: "High",        ttl: 365d, refresh: on_expiry }
      C: { value: medium,      label: "Medium",      ttl: 365d, refresh: on_expiry }
      D: { value: low,         label: "Low",         ttl: 365d, refresh: on_expiry }

  - key: review_depth
    label: Review Depth
    derived_from: app_criticality
    rule:
      A: { value: full_review,    label: "Full review",    ttl: 365d, refresh: on_expiry }
      B: { value: scoped_review,  label: "Scoped review",  ttl: 365d, refresh: on_expiry }
      C: { value: express_review, label: "Express review", ttl: 365d, refresh: on_expiry }
      D: { value: self_attested,  label: "Self‑attested",  ttl: 365d, refresh: on_expiry }

  # ---- Artifacts (per release)
  - key: product_vision
    label: Product Vision
    derived_from: artifact
    rule:
      required: { value: required, label: "Required", ttl: 0d, refresh: per_release }

  - key: product_roadmap
    label: Product Roadmap
    derived_from: artifact
    rule:
      required: { value: required, label: "Required", ttl: 0d, refresh: per_release }

  - key: architecture_vision
    label: Architecture Vision
    derived_from: artifact
    rule:
      required: { value: required, label: "Required", ttl: 0d, refresh: per_release }

  - key: service_vision
    label: Service Vision
    derived_from: artifact
    rule:
      required: { value: required, label: "Required", ttl: 0d, refresh: per_release }

  - key: security_vision
    label: Security Vision
    derived_from: artifact
    rule:
      required: { value: required, label: "Required", ttl: 0d, refresh: per_release }

  - key: test_vision
    label: Test Vision
    derived_from: artifact
    rule:
      required: { value: required, label: "Required", ttl: 0d, refresh: per_release }
